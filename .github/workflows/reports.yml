name: Generate Reports

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  generate-reports:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.11"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
        
    - name: Generate coverage report
      run: |
        pytest --cov=pure3270 --cov-report=html --cov-report=xml --cov-report=term
        
    - name: Generate coverage badge
      run: |
        # Check if coverage.xml exists
        if [ -f coverage.xml ]; then
          # Extract coverage percentage from the XML
          coverage_percent=$(grep -o 'line-rate="[0-9.]*"' coverage.xml | head -1 | sed 's/line-rate="//' | sed 's/"//' | awk '{print int($1*100)}')
        else
          coverage_percent=0
        fi
        
        # If we couldn't extract from XML, try to get from terminal output
        if [ "$coverage_percent" -eq 0 ] || [ -z "$coverage_percent" ]; then
          # This would require capturing the pytest output in a file
          coverage_percent=0
        fi
        
        # Determine badge color based on coverage
        if [ "$coverage_percent" -ge 90 ]; then
          color="brightgreen"
        elif [ "$coverage_percent" -ge 75 ]; then
          color="yellow"
        else
          color="red"
        fi
        
        echo "Coverage: ${coverage_percent}%"
        
    - name: Generate linting report
      run: |
        flake8 . > flake8-report.txt || true
        black --check . > black-report.txt 2>&1 || true
        
    - name: Archive coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          htmlcov/
          coverage.xml
          coverage-badge.md
        
    - name: Archive linting reports
      uses: actions/upload-artifact@v4
      with:
        name: linting-reports
        path: |
          flake8-report.txt
          black-report.txt
        if-no-files-found: ignore
        
    - name: Setup GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
      
    - name: Upload coverage report to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: htmlcov/
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v4