name: Python Regression Detection

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
  workflow_dispatch:  # Manual trigger

jobs:
  check-regression:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13  # Latest stable for comparison
      uses: actions/setup-python@v5
      with:
        python-version: 3.13

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests  # For checking releases

    - name: Check for new Python releases
      id: check-releases
      run: |
        python scripts/check_python_releases.py --output json > releases.json
        NEW_VERSION=$(python -c "import json; data = json.load(open('releases.json')); print(data['latest_minor'] if data else '')")
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        if [ -n "$NEW_VERSION" ]; then
          echo "Found new version: $NEW_VERSION"
        fi

    - name: Run tests on new Python version
      if: steps.check-releases.outputs.new_version != ''
      run: |
        NEW_VER=${{ steps.check-releases.outputs.new_version }}
        python -m pip install "py==$NEW_VER"
        pip install -e .
        pytest tests/ -v --tb=short || (echo "Tests failed on $NEW_VER"; exit 1)

    - name: Create issue if tests fail
      if: failure() && steps.check-releases.outputs.new_version != ''
      uses: actions/github-script@v7
      with:
        script: |
          const new_ver = "${{ steps.check-releases.outputs.new_version }}";
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Python ${{ steps.check-releases.outputs.new_version }} compatibility failure`,
            body: `Tests failed on Python ${new_ver} in regression detection.\n\nPlease investigate and fix compatibility issues.\n\nWorkflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
          });