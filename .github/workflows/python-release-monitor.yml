name: Python Release Monitor

on:
  schedule:
    # Check for new Python releases daily at 8 AM UTC
    - cron: '0 8 * * *'
  workflow_dispatch:  # Allow manual trigger

jobs:
  check-python-releases:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # Fetch full history for proper branch creation

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        # Note: requests is used for API calls, but script has fallback mechanisms
        # if external APIs are blocked by firewall/DNS restrictions

    - name: Configure git for automated commits
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Check for Python version changes and create PRs
      id: check_releases
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd ${{ github.workspace }}
        echo "Running Python release check..."

        # Run the Python script and capture its exit code
        if python scripts/check_python_releases.py; then
          echo "Script completed successfully"
          script_success=true
        else
          echo "Script completed with errors, but continuing workflow"
          script_success=false
        fi

        # The script now creates PRs instead of direct commits
        # Check if any PRs were created by looking at recent activity
        echo "script_success=$script_success" >> $GITHUB_OUTPUT
        echo "prs_created=true" >> $GITHUB_OUTPUT  # Script reports its own PR creation status

    - name: Report automation status
      run: |
        if [[ "${{ steps.check_releases.outputs.script_success }}" == "true" ]]; then
          echo "‚úÖ Python release check completed successfully"
        else
          echo "‚ö†Ô∏è Python release check completed with warnings/errors"
        fi

        echo ""
        echo "üîç Python Version Management Summary:"
        echo "- This workflow automatically detects new Python releases and EOL versions"
        echo "- Creates separate PRs for adding new versions and removing EOL versions"
        echo "- PRs include detailed changelogs and breaking change notices"
        echo "- Manual review and approval required before changes are merged"
        echo ""
        echo "üìù Check the repository's Pull Requests tab for any new automated PRs"
